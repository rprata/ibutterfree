version: 2.1

jobs:
  build-gcc:
    docker:
      - image: "debian:stretch"
    steps:
      - checkout
      - run:
          name: Configuring linux environment
          command: 'apt-get update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/*'
      - run:
          name: Installing tools
          command: 'apt-get update && apt-get install -y gcc g++ cmake clang-format ninja-build'
      - run:
          name: Checking code format
          command: |
                  SOURCE_FILES=`find . -name \*.c -type f -or -name \*.h -type f`
                  for SOURCE_FILE in $SOURCE_FILES
                  do
                  export FORMATTING_ISSUE_COUNT=`clang-format -output-replacements-xml $SOURCE_FILE | grep offset | wc -l`
                  if [ "$FORMATTING_ISSUE_COUNT" -gt "0" ]; then
                      echo "Source file $SOURCE_FILE contains formatting issues. Please use clang-format tool (find . -regex '.*\.\(c\|h\)' -exec \$CLANG_FORMAT -style=file -i {} \;) to resolve found issues."
                      exit 1
                  fi
                  done
      - run:
          name: Configuring build environment
          command: 'cmake CMakeLists.txt -Bbuild -GNinja'
      - run:
          name: Building project
          command: 'cmake --build build'
  build-clang:
    docker:
      - image: "debian:stretch"
    steps:
      - checkout
      - run:
          name: Configuring linux environment
          command: 'apt-get update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/*'
      - run:
          name: Installing tools
          command: 'apt-get update && apt-get install -y cmake clang clang-format ninja-build'
      - run:
          name: Checking code format
          command: |
                  SOURCE_FILES=`find . -name \*.c -type f -or -name \*.h -type f`
                  for SOURCE_FILE in $SOURCE_FILES
                  do
                  export FORMATTING_ISSUE_COUNT=`clang-format -output-replacements-xml $SOURCE_FILE | grep offset | wc -l`
                  if [ "$FORMATTING_ISSUE_COUNT" -gt "0" ]; then
                      echo "Source file $SOURCE_FILE contains formatting issues. Please use clang-format tool (find . -regex '.*\.\(c\|h\)' -exec \$CLANG_FORMAT -style=file -i {} \;) to resolve found issues."
                      exit 1
                  fi
                  done
      - run:
          name: Configuring build environment
          command: 'cmake CMakeLists.txt -Bbuild -GNinja -DCMAKE_TOOLCHAIN_FILE=toolchains/clang-toolchain.cmake'
      - run:
          name: Building project
          command: 'cmake --build build'
  build-beagle-bone-black:
    docker:
      - image: "debian:stretch"
    steps:
      - checkout
      - run:
          name: Configuring linux environment
          command: 'apt-get update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/*'
      - run:
          name: Installing tools
          command: |
                  apt-get update && apt-get install -y gcc sed g++ cmake wget tar xz-utils ninja-build
                  wget -c https://releases.linaro.org/components/toolchain/binaries/6.5-2018.12/arm-linux-gnueabihf/gcc-linaro-6.5.0-2018.12-x86_64_arm-linux-gnueabihf.tar.xz
                  tar xf gcc-linaro-6.5.0-2018.12-x86_64_arm-linux-gnueabihf.tar.xz
      - run:
          name: Configuring build environment
          command: |
                  sed -i 's/SET(BEAGLE_BONE_BLACK "")/SET(BEAGLE_BONE_BLACK "\/root\/project")/g' toolchains/bbblack-toolchain.cmake
                  cmake CMakeLists.txt -Bbuild -GNinja -DCMAKE_TOOLCHAIN_FILE=toolchains/bbblack-toolchain.cmake
      - run:
          name: Building project
          command: 'cmake --build build'
  build-rpi-1:
    docker:
      - image: "debian:stretch"
    steps:
      - checkout
      - run:
          name: Configuring linux environment
          command: 'apt-get update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/*'
      - run:
          name: Installing tools
          command: |
                  dpkg --add-architecture i386 && apt-get update && apt-get install -y gcc sed g++ cmake wget git tar xz-utils ninja-build zlib1g:i386
                  git clone https://github.com/raspberrypi/tools.git
      - run:
          name: Configuring build environment
          command: |
                  sed -i 's/SET(RPI_TOOLCHAIN "")/SET(RPI_TOOLCHAIN "\/root\/project")/g' toolchains/rpi1-toolchain.cmake
                  cmake CMakeLists.txt -Bbuild -GNinja -DCMAKE_TOOLCHAIN_FILE=toolchains/rpi1-toolchain.cmake
      - run:
          name: Building project
          command: 'cmake --build build'
  build-rpi-2:
    docker:
      - image: "debian:stretch"
    steps:
      - checkout
      - run:
          name: Configuring linux environment
          command: 'apt-get update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/*'
      - run:
          name: Installing tools
          command: |
                  apt-get update && apt-get install -y gcc sed g++ cmake wget git tar xz-utils ninja-build
                  git clone https://github.com/raspberrypi/tools.git
      - run:
          name: Configuring build environment
          command: |
                  sed -i 's/SET(RPI_TOOLCHAIN "")/SET(RPI_TOOLCHAIN "\/root\/project")/g' toolchains/rpi2-toolchain.cmake
                  cmake CMakeLists.txt -Bbuild -GNinja -DCMAKE_TOOLCHAIN_FILE=toolchains/rpi2-toolchain.cmake
      - run:
          name: Building project
          command: 'cmake --build build'
  build-odroid-c2:
    docker:
      - image: "debian:stretch"
    steps:
      - checkout
      - run:
          name: Configuring linux environment
          command: 'apt-get update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/*'
      - run:
          name: Installing tools
          command: |
                  apt-get update && apt-get install -y gcc sed g++ cmake wget tar xz-utils ninja-build
                  wget -c https://releases.linaro.org/components/toolchain/binaries/6.1-2016.08/aarch64-linux-gnu/gcc-linaro-6.1.1-2016.08-x86_64_aarch64-linux-gnu.tar.xz
                  tar xf gcc-linaro-6.1.1-2016.08-x86_64_aarch64-linux-gnu.tar.xz 
      - run:
          name: Configuring build environment
          command: |
                  sed -i 's/SET(ODROID_C2 "")/SET(ODROID_C2 "\/root\/project")/g' toolchains/odroid-c2-toolchain.cmake
                  cmake CMakeLists.txt -Bbuild -GNinja -DCMAKE_TOOLCHAIN_FILE=toolchains/odroid-c2-toolchain.cmake
      - run:
          name: Building project
          command: 'cmake --build build'
workflows:
    version: 2.1
    build:
        jobs:
            - build-gcc
            - build-clang
            - build-beagle-bone-black
            - build-rpi-1
            - build-rpi-2
            - build-odroid-c2